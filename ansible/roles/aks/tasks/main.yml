- name: Create Kubernetes secret for ACR
  kubernetes.core.k8s:
    state: present
    namespace: default
    kubeconfig: ~/.kube/config
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: acr-secret
      data:
        .dockerconfigjson: "{{ lookup('file', '/home/devalexops/.docker/config.json') | b64encode }}"
      type: kubernetes.io/dockerconfigjson


- name: Deploy application to AKS
  kubernetes.core.k8s:
    state: present
    kubeconfig: ~/.kube/config
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: cp2-deployment
        namespace: default
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: cp2-aks
        template:
          metadata:
            labels:
              app: cp2-aks
          spec:
            containers:
            - name: cp2-aks
              image: "{{ acr_login_url }}/postgen:v1.0"
              volumeMounts:
              - mountPath: "/data"
                name: data-volume
            volumes:
            - name: data-volume
              persistentVolumeClaim:
                claimName: cp2-pvc
            imagePullSecrets:
            - name: acr-secret

- name: Create a Persistent Volume Claim (PVC)
  kubernetes.core.k8s:
    state: present
    kubeconfig: ~/.kube/config
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: cp2-pvc
        namespace: default
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

- name: Expose deployment with LoadBalancer service
  kubernetes.core.k8s:
    state: present
    kubeconfig: ~/.kube/config
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: cp2-service
        namespace: default
      spec:
        selector:
          app: cp2-aks
        ports:
        - protocol: TCP
          port: 1987
          targetPort: 1987
        type: LoadBalancer